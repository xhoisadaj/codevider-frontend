{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nexport const useSearch = apiPath => {\n  _s();\n  const [queryTerm, setQueryTerm] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [searchError, setSearchError] = useState(\"\");\n  const handleSearch = async event => {\n    event.preventDefault();\n    const query = event.target.search.value;\n    setQueryTerm(query);\n    const url = `https://freetestapi.com/api/v1/${apiPath}?search=${query}`;\n    console.log(url);\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      if (data.length === 0) {\n        setSearchError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n      } else {\n        setSearchError(\"\");\n      }\n      setSearchResults(data);\n    } catch (error) {\n      console.error(\"An error occurred while searching.\");\n      setSearchError(\"An error occurred while searching.\");\n    }\n  };\n  const handleReset = useCallback(() => {\n    setQueryTerm(\"\");\n    setSearchResults([]);\n    setSearchError(\"\");\n  }, []);\n  return {\n    queryTerm,\n    searchResults,\n    searchError,\n    handleSearch,\n    handleReset\n  };\n};\n_s(useSearch, \"mSerGKAAAYftN3VjvOcjS4oQTXA=\");","map":{"version":3,"names":["useState","useCallback","useSearch","apiPath","_s","queryTerm","setQueryTerm","searchResults","setSearchResults","searchError","setSearchError","handleSearch","event","preventDefault","query","target","search","value","url","console","log","response","fetch","data","json","length","error","handleReset"],"sources":["/Users/xhoanisadaj/Documents/projects/codevider/codevider/src/hooks/useSearch.js"],"sourcesContent":["import { useState, useCallback } from 'react';\n\nexport const useSearch = (apiPath) => {\n    const [queryTerm, setQueryTerm] = useState(\"\");\n    const [searchResults, setSearchResults] = useState([]);\n    const [searchError, setSearchError] = useState(\"\");\n\n    const handleSearch = async (event) => {\n        event.preventDefault();\n        const query = event.target.search.value;\n        setQueryTerm(query);\n        const url = `https://freetestapi.com/api/v1/${apiPath}?search=${query}`;\n        console.log(url);\n\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            if (data.length === 0) {\n                setSearchError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n            } else {\n                setSearchError(\"\");\n            }\n            setSearchResults(data);\n        } catch (error) {\n            console.error(\"An error occurred while searching.\");\n            setSearchError(\"An error occurred while searching.\");\n        }\n    };\n\n    const handleReset = useCallback(() => {\n        setQueryTerm(\"\");\n        setSearchResults([]);\n        setSearchError(\"\");\n    }, []);\n\n    return { queryTerm, searchResults, searchError, handleSearch, handleReset };\n};\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAE7C,OAAO,MAAMC,SAAS,GAAIC,OAAO,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMC,KAAK,GAAGF,KAAK,CAACG,MAAM,CAACC,MAAM,CAACC,KAAK;IACvCX,YAAY,CAACQ,KAAK,CAAC;IACnB,MAAMI,GAAG,GAAG,kCAAkCf,OAAO,WAAWW,KAAK,EAAE;IACvEK,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAEhB,IAAI;MACA,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,CAAC;MACjC,MAAMK,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,CAACE,MAAM,KAAK,CAAC,EAAE;QACnBf,cAAc,CAAC,iDAAiD,CAAC;MACrE,CAAC,MAAM;QACHA,cAAc,CAAC,EAAE,CAAC;MACtB;MACAF,gBAAgB,CAACe,IAAI,CAAC;IAC1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZP,OAAO,CAACO,KAAK,CAAC,oCAAoC,CAAC;MACnDhB,cAAc,CAAC,oCAAoC,CAAC;IACxD;EACJ,CAAC;EAED,MAAMiB,WAAW,GAAG1B,WAAW,CAAC,MAAM;IAClCK,YAAY,CAAC,EAAE,CAAC;IAChBE,gBAAgB,CAAC,EAAE,CAAC;IACpBE,cAAc,CAAC,EAAE,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAEL,SAAS;IAAEE,aAAa;IAAEE,WAAW;IAAEE,YAAY;IAAEgB;EAAY,CAAC;AAC/E,CAAC;AAACvB,EAAA,CAlCWF,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}