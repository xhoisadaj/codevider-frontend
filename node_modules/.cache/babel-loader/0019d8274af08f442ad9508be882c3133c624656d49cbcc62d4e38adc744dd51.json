{"ast":null,"code":"var _s = $RefreshSig$();\nexport const useAnimalData = apiPath => {\n  _s();\n  const [data, setData] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [searchError, setSearchError] = useState(\"\");\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const url = `https://freetestapi.com/api/v1/${apiPath}?limit=6`;\n        const response = await fetch(url);\n        const data = await response.json();\n        if (data.length === 0) {\n          setError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n        } else {\n          setError(\"\");\n        }\n        setData(data);\n      } catch (error) {\n        console.error(\"An error occurred while fetching data.\");\n        setError(\"An error occurred while fetching data.\");\n      }\n    };\n    fetchData();\n    return () => {\n      // Cleanup function\n      setData([]);\n      setSearchResults([]);\n      setError(\"\");\n      setSearchError(\"\");\n    };\n  }, [apiPath]); // <-- Correct dependency array\n\n  const search = query => {\n    if (!query) {\n      setSearchResults([]);\n      setSearchError(\"\");\n      return;\n    }\n    try {\n      const results = data.filter(animal => animal.name.toLowerCase().includes(query.toLowerCase()));\n      if (results.length === 0) {\n        setSearchError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n      } else {\n        setSearchError(\"\");\n      }\n      setSearchResults(results);\n    } catch (error) {\n      console.error(\"An error occurred while searching.\");\n      setSearchError(\"An error occurred while searching.\");\n    }\n  };\n  return {\n    data,\n    searchResults,\n    error,\n    searchError,\n    search\n  };\n};\n_s(useAnimalData, \"dod/ne55bKmyiD6+c6EBOoUmbTc=\");","map":{"version":3,"names":["useAnimalData","apiPath","_s","data","setData","useState","searchResults","setSearchResults","error","setError","searchError","setSearchError","useEffect","fetchData","url","response","fetch","json","length","console","search","query","results","filter","animal","name","toLowerCase","includes"],"sources":["/Users/xhoanisadaj/Documents/projects/codevider/codevider/src/hooks/useAnimalData.js"],"sourcesContent":["export const useAnimalData = (apiPath) => {\n    const [data, setData] = useState([]);\n    const [searchResults, setSearchResults] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [searchError, setSearchError] = useState(\"\");\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const url = `https://freetestapi.com/api/v1/${apiPath}?limit=6`;\n                const response = await fetch(url);\n                const data = await response.json();\n                if (data.length === 0) {\n                    setError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n                } else {\n                    setError(\"\");\n                }\n                setData(data);\n            } catch (error) {\n                console.error(\"An error occurred while fetching data.\");\n                setError(\"An error occurred while fetching data.\");\n            }\n        };\n\n        fetchData();\n\n        return () => {\n            // Cleanup function\n            setData([]);\n            setSearchResults([]);\n            setError(\"\");\n            setSearchError(\"\");\n        };\n    }, [apiPath]); // <-- Correct dependency array\n\n    const search = (query) => {\n        if (!query) {\n            setSearchResults([]);\n            setSearchError(\"\");\n            return;\n        }\n\n        try {\n            const results = data.filter(animal => animal.name.toLowerCase().includes(query.toLowerCase()));\n            if (results.length === 0) {\n                setSearchError(\"WE FOUND NOTHING FOR YOU! SEARCH SOMETHING ELSE\");\n            } else {\n                setSearchError(\"\");\n            }\n            setSearchResults(results);\n        } catch (error) {\n            console.error(\"An error occurred while searching.\");\n            setSearchError(\"An error occurred while searching.\");\n        }\n    };\n\n    return { data, searchResults, error, searchError, search };\n};\n"],"mappings":";AAAA,OAAO,MAAMA,aAAa,GAAIC,OAAO,IAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAElDO,SAAS,CAAC,MAAM;IACZ,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,GAAG,GAAG,kCAAkCb,OAAO,UAAU;QAC/D,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMX,IAAI,GAAG,MAAMY,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClC,IAAId,IAAI,CAACe,MAAM,KAAK,CAAC,EAAE;UACnBT,QAAQ,CAAC,iDAAiD,CAAC;QAC/D,CAAC,MAAM;UACHA,QAAQ,CAAC,EAAE,CAAC;QAChB;QACAL,OAAO,CAACD,IAAI,CAAC;MACjB,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZW,OAAO,CAACX,KAAK,CAAC,wCAAwC,CAAC;QACvDC,QAAQ,CAAC,wCAAwC,CAAC;MACtD;IACJ,CAAC;IAEDI,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM;MACT;MACAT,OAAO,CAAC,EAAE,CAAC;MACXG,gBAAgB,CAAC,EAAE,CAAC;MACpBE,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;IACtB,CAAC;EACL,CAAC,EAAE,CAACV,OAAO,CAAC,CAAC,CAAC,CAAC;;EAEf,MAAMmB,MAAM,GAAIC,KAAK,IAAK;IACtB,IAAI,CAACA,KAAK,EAAE;MACRd,gBAAgB,CAAC,EAAE,CAAC;MACpBI,cAAc,CAAC,EAAE,CAAC;MAClB;IACJ;IAEA,IAAI;MACA,MAAMW,OAAO,GAAGnB,IAAI,CAACoB,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACN,KAAK,CAACK,WAAW,CAAC,CAAC,CAAC,CAAC;MAC9F,IAAIJ,OAAO,CAACJ,MAAM,KAAK,CAAC,EAAE;QACtBP,cAAc,CAAC,iDAAiD,CAAC;MACrE,CAAC,MAAM;QACHA,cAAc,CAAC,EAAE,CAAC;MACtB;MACAJ,gBAAgB,CAACe,OAAO,CAAC;IAC7B,CAAC,CAAC,OAAOd,KAAK,EAAE;MACZW,OAAO,CAACX,KAAK,CAAC,oCAAoC,CAAC;MACnDG,cAAc,CAAC,oCAAoC,CAAC;IACxD;EACJ,CAAC;EAED,OAAO;IAAER,IAAI;IAAEG,aAAa;IAAEE,KAAK;IAAEE,WAAW;IAAEU;EAAO,CAAC;AAC9D,CAAC;AAAClB,EAAA,CAzDWF,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}